# less tricky
# Everyone has random processing times
# normal distribution, mu = 1, sigma = 0.1
# three random numbers generated for tasks that cannot be performed
# see normal_distribution.py for the calculation
<number of tasks>
12

<cycle time>
1000

<order strength>
0,153


<task times>
1 245
2 119
3 51
4 231
5 53
6 182
7 132
8 93
9 123
10 252
11 178
12 120

<precedence relations>
3,11
4,7
4,10
4,12
5,8
5,9
7,11
11,12

<number of worker categories>
2

<worker availability>
1:3
2:3

<number of stations>
3

<station capacity>
1:3
2:2
3:3

<worker modifiers>
1:1:1.0652;    1:2:INF
2:1:0.9863;    2:2:1.0356
3:1:1.1441;    3:2:INF
4:1:INF;       4:2:0.8186
5:1:1.0356;    5:2:0.8285
6:1:0.9863;    6:2:0.9271
7:1:INF;       7:2:0.9962
8:1:0.9962;    8:2:1.2329
9:1:INF;       9:2:0.9666
10:1:0.8975;   10:2:INF
11:1:1.0948;   11:2:0.9567
12:1:0.9962;   12:2:1.0356

<worker amount modifiers>
1:1:1.0;    1:2:0.90
2:1:1.0;    2:2:0.92
3:1:1.0;    3:2:0.85
4:1:1.0;    4:2:0.87
5:1:1.0;    5:2:0.91
6:1:1.0;    6:2:0.91
7:1:1.0;    7:2:0.92
8:1:1.0;    8:2:0.90
9:1:1.0;    9:2:0.90
10:1:1.0;   10:2:0.86
11:1:1.0;   11:2:0.98
12:1:1.0;   12:2:0.82

<worker bounds>
1:1,2
2:1,2
3:1,2
4:1,2
5:1,2
6:1,2
7:1,2
8:1,2
9:1,2
10:1,2
11:1,2
12:1,2

<end>
